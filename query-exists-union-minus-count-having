-- Query to List Customers Who Have Not Rented Any Equipment
SELECT 
    c.Name AS Customer_Name, 
    ce.Customer_Email AS Email, 
    cp.Customer_Phone_Number AS Phone
FROM Customer c
LEFT JOIN Customer_Email ce ON c.Customer_ID = ce.Customer_ID
LEFT JOIN Customer_Phone cp ON c.Customer_ID = cp.Customer_ID
WHERE NOT EXISTS (
    SELECT 1 
    FROM Rental r
    WHERE r.Customer_ID = c.Customer_ID
);


-- Query to Count Rentals Grouped by Equipment Condition
SELECT Condition, COUNT(*) AS Total_Rentals
FROM Equipment E
JOIN Rental R ON E.Equipment_ID = R.Equipment_ID
GROUP BY Condition
HAVING COUNT(*) > 5;


-- Query to Retrieve Rentals That Have Overdue Charges Using UNION
SELECT r.Rental_ID, rc.Customer_ID, r.Status
FROM Rental r
JOIN Rental_Customer rc ON r.Rental_ID = rc.Rental_ID
WHERE r.Status = 'Overdue'
UNION
SELECT o.Rental_ID, rc.Customer_ID, 'Overdue Charge' AS Status
FROM Overdue o
JOIN Rental_Customer rc ON o.Rental_ID = rc.Rental_ID;


-- Query to Find Equipment That Has Never Been Reserved
SELECT E.Equipment_ID, E.Name
FROM Equipment E
MINUS
SELECT R.Equipment_ID, E.Name
FROM Equipment E
JOIN Reservation R ON E.Equipment_ID = R.Equipment_ID;

-- Query to List Customers with Overdue Rentals but No Payments
SELECT c.Name AS Customer_Name, ce.Customer_Email AS Email
FROM Customer c
JOIN Customer_Email ce ON c.Customer_ID = ce.Customer_ID
WHERE EXISTS (
    SELECT 1 
    FROM Overdue o
    JOIN Rental_Customer rc ON o.Rental_ID = rc.Rental_ID
    WHERE rc.Customer_ID = c.Customer_ID
)
AND NOT EXISTS (
    SELECT 1
    FROM Payment p
    JOIN Rental_Customer rc ON p.Rental_ID = rc.Rental_ID
    WHERE rc.Customer_ID = c.Customer_ID
);


-- Query to Calculate Total Maintenance Cost per Equipment
SELECT E.Name, SUM(M.Maintenance_Cost) AS Total_Cost
FROM Equipment E
JOIN Maintenance M ON E.Equipment_ID = M.Equipment_ID
GROUP BY E.Name
HAVING SUM(M.Maintenance_Cost) > 1000;
